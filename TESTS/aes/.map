
Discarded input sections

 .text          0x0000000000000000        0x0 vector.o
 .data          0x0000000000000000        0x0 vector.o
 .bss           0x0000000000000000        0x0 vector.o
 .data          0x0000000000000000        0x0 elmoasmfunctions.o
 .bss           0x0000000000000000        0x0 elmoasmfunctions.o
 .text          0x0000000000000000        0x0 main.o
 .data          0x0000000000000000        0x0 main.o
 .bss           0x0000000000000000        0x0 main.o
 .text          0x0000000000000000        0x0 byte_mask_aes.o
 .data          0x0000000000000000        0x0 byte_mask_aes.o
 .bss           0x0000000000000000        0x0 byte_mask_aes.o
 .text.masked   0x0000000000000000       0x18 byte_mask_aes.o
 .text          0x0000000000000000        0x0 random.o
 .data          0x0000000000000000        0x0 random.o
 .bss           0x0000000000000000        0x0 random.o
 .text.maskdata
                0x0000000000000000       0x28 random.o
 .text.unmaskdata
                0x0000000000000000       0x1c random.o
 .text.setseed  0x0000000000000000        0xc random.o
 .text.getrandui32
                0x0000000000000000        0xc random.o
 .text.getrandui8
                0x0000000000000000        0xc random.o
 .bss.mask      0x0000000000000000       0x10 random.o
 .text          0x0000000000000000        0x0 rosita_vars.o
 .data          0x0000000000000000        0x0 rosita_vars.o
 .bss           0x0000000000000000        0x0 rosita_vars.o
 .bss.R         0x0000000000000000        0x4 rosita_vars.o
 .bss.R1        0x0000000000000000        0x4 rosita_vars.o
 .bss.R32       0x0000000000000000        0x4 rosita_vars.o
 .bss.R32UUUU   0x0000000000000000        0x4 rosita_vars.o
 .bss.T32       0x0000000000000000        0x4 rosita_vars.o
 .data.R32MASK  0x0000000000000000        0x4 rosita_vars.o
 .data.R32MASKR
                0x0000000000000000        0x4 rosita_vars.o
 .debug_info    0x0000000000000000       0x99 rosita_vars.o
 .debug_abbrev  0x0000000000000000       0x3d rosita_vars.o
 .debug_aranges
                0x0000000000000000       0x18 rosita_vars.o
 .debug_line    0x0000000000000000       0x2e rosita_vars.o
 .debug_str     0x0000000000000000      0x124 rosita_vars.o
 .comment       0x0000000000000000       0x72 rosita_vars.o
 .ARM.attributes
                0x0000000000000000       0x31 rosita_vars.o
 .text          0x0000000000000000        0x0 simple_tmpl.o
 .data          0x0000000000000000        0x0 simple_tmpl.o
 .bss           0x0000000000000000        0x0 simple_tmpl.o
 .bss.input_copy
                0x0000000000000000       0x10 simple_tmpl.o
 .bss.rk        0x0000000000000000       0xb0 simple_tmpl.o
 .bss.throwaway
                0x0000000000000000       0x10 simple_tmpl.o
 .data.domask   0x0000000000000000        0x4 simple_tmpl.o

Memory Configuration

Name             Origin             Length             Attributes
rom              0x0000000008000000 0x0000000000010000 xr
ram              0x0000000020000000 0x0000000000002000 xrw
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD vector.o
LOAD elmoasmfunctions.o
LOAD main.o
LOAD byte_mask_aes.o
LOAD random.o
LOAD rosita_vars.o
LOAD simple_tmpl.o
START GROUP
LOAD /home/madura/wrk/ROSITA-DIST/TOOLCHAIN/gnu-mcu-eclipse/arm-none-eabi-gcc/7.3.1-1.1-20180724-0637/bin/../lib/gcc/arm-none-eabi/7.3.1/../../../../arm-none-eabi/lib/thumb/v6-m/libc.a
LOAD /home/madura/wrk/ROSITA-DIST/TOOLCHAIN/gnu-mcu-eclipse/arm-none-eabi-gcc/7.3.1-1.1-20180724-0637/bin/../lib/gcc/arm-none-eabi/7.3.1/thumb/v6-m/libgcc.a
LOAD /home/madura/wrk/ROSITA-DIST/TOOLCHAIN/gnu-mcu-eclipse/arm-none-eabi-gcc/7.3.1-1.1-20180724-0637/bin/../lib/gcc/arm-none-eabi/7.3.1/../../../../arm-none-eabi/lib/thumb/v6-m/libnosys.a
END GROUP
START GROUP
LOAD /home/madura/wrk/ROSITA-DIST/TOOLCHAIN/gnu-mcu-eclipse/arm-none-eabi-gcc/7.3.1-1.1-20180724-0637/bin/../lib/gcc/arm-none-eabi/7.3.1/thumb/v6-m/libgcc.a
LOAD /home/madura/wrk/ROSITA-DIST/TOOLCHAIN/gnu-mcu-eclipse/arm-none-eabi-gcc/7.3.1-1.1-20180724-0637/bin/../lib/gcc/arm-none-eabi/7.3.1/../../../../arm-none-eabi/lib/thumb/v6-m/libc.a
END GROUP

.text           0x0000000008000000      0xbf8
 *(.vectors)
 .vectors       0x0000000008000000       0xc0 vector.o
                0x0000000008000000                vector_table
 *(.text*)
 .text.blocking_handler
                0x00000000080000c0        0x2 vector.o
                0x00000000080000c0                rtc_isr
                0x00000000080000c0                tim7_isr
                0x00000000080000c0                blocking_handler
                0x00000000080000c0                tsc_isr
                0x00000000080000c0                spi1_isr
                0x00000000080000c0                i2c1_isr
                0x00000000080000c0                tim17_isr
                0x00000000080000c0                i2c2_isr
                0x00000000080000c0                usart1_isr
                0x00000000080000c0                usart3_4_isr
                0x00000000080000c0                tim1_cc_isr
                0x00000000080000c0                exti2_3_isr
                0x00000000080000c0                tim16_isr
                0x00000000080000c0                pvd_isr
                0x00000000080000c0                rcc_isr
                0x00000000080000c0                flash_isr
                0x00000000080000c0                hard_fault_handler
                0x00000000080000c0                tim14_isr
                0x00000000080000c0                spi2_isr
                0x00000000080000c0                usb_isr
                0x00000000080000c0                tim15_isr
                0x00000000080000c0                tim3_isr
                0x00000000080000c0                usart2_isr
                0x00000000080000c0                adc_comp_isr
                0x00000000080000c0                dma1_channel1_isr
                0x00000000080000c0                tim6_dac_isr
                0x00000000080000c0                tim1_brk_up_trg_com_isr
                0x00000000080000c0                dma1_channel2_3_isr
                0x00000000080000c0                exti4_15_isr
                0x00000000080000c0                cec_can_isr
                0x00000000080000c0                wwdg_isr
                0x00000000080000c0                tim2_isr
                0x00000000080000c0                dma1_channel4_5_isr
                0x00000000080000c0                exti0_1_isr
 .text.null_handler
                0x00000000080000c2        0x2 vector.o
                0x00000000080000c2                null_handler
                0x00000000080000c2                sv_call_handler
                0x00000000080000c2                pend_sv_handler
                0x00000000080000c2                sys_tick_handler
                0x00000000080000c2                nmi_handler
 .text.reset_handler
                0x00000000080000c4       0x7c vector.o
                0x00000000080000c4                reset_handler
 .text          0x0000000008000140       0xd8 elmoasmfunctions.o
                0x0000000008000140                starttrigger
                0x0000000008000152                endtrigger
                0x0000000008000164                readbyte
                0x0000000008000172                randbyte
                0x0000000008000184                getstart
                0x0000000008000196                getruncount
                0x00000000080001a8                printgroup
                0x00000000080001b8                printbyte
                0x00000000080001c6                endprogram
                0x00000000080001d4                initialisemaskflow
                0x00000000080001e4                resetmaskflow
                0x00000000080001f6                setmaskflowstart
                0x0000000008000206                resetdatafile
 .text.startup.main
                0x0000000008000218        0xe main.o
                0x0000000008000218                main
 *fill*         0x0000000008000226        0x2 
 .text.KeyExpansion
                0x0000000008000228       0xa8 byte_mask_aes.o
                0x0000000008000228                KeyExpansion
 .text.mixColumns
                0x00000000080002d0       0x70 byte_mask_aes.o
                0x00000000080002d0                mixColumns
 .text.shiftRows
                0x0000000008000340       0x32 byte_mask_aes.o
                0x0000000008000340                shiftRows
 *fill*         0x0000000008000372        0x2 
 .text.addRoundKey_masked
                0x0000000008000374       0x20 byte_mask_aes.o
                0x0000000008000374                addRoundKey_masked
 .text.remask   0x0000000008000394       0x50 byte_mask_aes.o
                0x0000000008000394                remask
 .text.calcMixColMask
                0x00000000080003e4       0x64 byte_mask_aes.o
                0x00000000080003e4                calcMixColMask
 .text.calcSbox_masked
                0x0000000008000448       0x34 byte_mask_aes.o
                0x0000000008000448                calcSbox_masked
 .text.init_masked_round_keys
                0x000000000800047c       0x84 byte_mask_aes.o
                0x000000000800047c                init_masked_round_keys
 .text.copy_key
                0x0000000008000500       0x28 byte_mask_aes.o
                0x0000000008000500                copy_key
 .text.init_masking
                0x0000000008000528       0x14 byte_mask_aes.o
                0x0000000008000528                init_masking
 .text.randomize_mask
                0x000000000800053c       0x4c byte_mask_aes.o
                0x000000000800053c                randomize_mask
 .text.subBytes_masked
                0x0000000008000588       0x2c byte_mask_aes.o
                0x0000000008000588                subBytes_masked
 .text.maskstate
                0x00000000080005b4       0x28 byte_mask_aes.o
                0x00000000080005b4                maskstate
 .text.aes128   0x00000000080005dc       0x70 byte_mask_aes.o
                0x00000000080005dc                aes128
 .text.runrand  0x000000000800064c       0x30 random.o
                0x000000000800064c                runrand
 .text.readrandombyte
                0x000000000800067c        0x8 random.o
                0x000000000800067c                readrandombyte
 .text.stack_clear
                0x0000000008000684       0x28 simple_tmpl.o
                0x0000000008000684                stack_clear
 .text.run_byte_aes_masked_
                0x00000000080006ac       0x90 simple_tmpl.o
                0x00000000080006ac                run_byte_aes_masked_
 .text.simple_init
                0x000000000800073c        0x2 simple_tmpl.o
                0x000000000800073c                simple_init
 *fill*         0x000000000800073e        0x2 
 .text.simple_run
                0x0000000008000740       0x98 simple_tmpl.o
                0x0000000008000740                simple_run
                0x00000000080007d8                . = ALIGN (0x4)
 *(.rodata*)
 .rodata.Rcon   0x00000000080007d8       0xff byte_mask_aes.o
 .rodata.mul_02
                0x00000000080008d7      0x100 byte_mask_aes.o
                0x00000000080008d7                mul_02
 .rodata.mul_03
                0x00000000080009d7      0x100 byte_mask_aes.o
                0x00000000080009d7                mul_03
 .rodata.sbox   0x0000000008000ad7      0x100 byte_mask_aes.o
                0x0000000008000ad7                sbox
 .rodata.fixedinput
                0x0000000008000bd7       0x10 simple_tmpl.o
 .rodata.fixedkey
                0x0000000008000be7       0x10 simple_tmpl.o
                0x0000000008000bf8                . = ALIGN (0x4)
 *fill*         0x0000000008000bf7        0x1 

.glue_7         0x0000000008000bf8        0x0
 .glue_7        0x0000000008000bf8        0x0 linker stubs

.glue_7t        0x0000000008000bf8        0x0
 .glue_7t       0x0000000008000bf8        0x0 linker stubs

.vfp11_veneer   0x0000000008000bf8        0x0
 .vfp11_veneer  0x0000000008000bf8        0x0 linker stubs

.v4_bx          0x0000000008000bf8        0x0
 .v4_bx         0x0000000008000bf8        0x0 linker stubs

.iplt           0x0000000008000bf8        0x0
 .iplt          0x0000000008000bf8        0x0 vector.o

.rel.dyn        0x0000000008000bf8        0x0
 .rel.iplt      0x0000000008000bf8        0x0 vector.o

.preinit_array  0x0000000008000bf8        0x0
                0x0000000008000bf8                . = ALIGN (0x4)
                0x0000000008000bf8                __preinit_array_start = .
 *(.preinit_array)
                0x0000000008000bf8                __preinit_array_end = .

.init_array     0x0000000008000bf8        0x0
                0x0000000008000bf8                . = ALIGN (0x4)
                0x0000000008000bf8                __init_array_start = .
 *(SORT_BY_NAME(.init_array.*))
 *(.init_array)
                0x0000000008000bf8                __init_array_end = .

.fini_array     0x0000000008000bf8        0x0
                0x0000000008000bf8                . = ALIGN (0x4)
                0x0000000008000bf8                __fini_array_start = .
 *(.fini_array)
 *(SORT_BY_NAME(.fini_array.*))
                0x0000000008000bf8                __fini_array_end = .

.ARM.extab
 *(.ARM.extab*)

.ARM.exidx      0x0000000008000bf8        0x0
                0x0000000008000bf8                __exidx_start = .
 *(.ARM.exidx*)
                0x0000000008000bf8                __exidx_end = .
                0x0000000008000bf8                . = ALIGN (0x4)
                0x0000000008000bf8                _etext = .

.data           0x0000000020000000        0x0 load address 0x0000000008000bf8
                0x0000000020000000                _data = .
 *(.data*)
                0x0000000020000000                . = ALIGN (0x4)
                0x0000000020000000                _edata = .
                0x0000000008000bf8                _data_loadaddr = LOADADDR (.data)

.igot.plt       0x0000000020000000        0x0 load address 0x0000000008000bf8
 .igot.plt      0x0000000020000000        0x0 vector.o

.bss            0x0000000020000000      0x2b8 load address 0x0000000008000bf8
 *(.bss*)
 .bss.Mask      0x0000000020000000        0xa byte_mask_aes.o
                0x0000000020000000                Mask
 *fill*         0x000000002000000a        0x2 
 .bss.RoundKey_masked
                0x000000002000000c       0xb0 byte_mask_aes.o
                0x000000002000000c                RoundKey_masked
 .bss.Sbox_masked
                0x00000000200000bc      0x100 byte_mask_aes.o
                0x00000000200000bc                Sbox_masked
 .bss.WordMask  0x00000000200001bc        0x4 byte_mask_aes.o
                0x00000000200001bc                WordMask
 .bss.roundKey  0x00000000200001c0       0xb0 byte_mask_aes.o
                0x00000000200001c0                roundKey
 .bss.ui32randval
                0x0000000020000270        0x4 random.o
                0x0000000020000270                ui32randval
 .bss.ui8randval
                0x0000000020000274        0x1 random.o
                0x0000000020000274                ui8randval
 *fill*         0x0000000020000275        0x3 
 .bss.input     0x0000000020000278       0x10 simple_tmpl.o
                0x0000000020000278                input
 .bss.key       0x0000000020000288       0x10 simple_tmpl.o
                0x0000000020000288                key
 .bss.output    0x0000000020000298       0x10 simple_tmpl.o
                0x0000000020000298                output
 .bss.randombuf
                0x00000000200002a8       0x10 simple_tmpl.o
                0x00000000200002a8                randombuf
 *(COMMON)
                0x00000000200002b8                . = ALIGN (0x4)
                0x00000000200002b8                _ebss = .

/DISCARD/
 *(.eh_frame)
                0x00000000200002b8                . = ALIGN (0x4)
                0x00000000200002b8                end = .
                0x0000000020002000                PROVIDE (_stack = (ORIGIN (ram) + LENGTH (ram)))
OUTPUT(final elf32-littlearm)

.debug_info     0x0000000000000000     0x2278
 .debug_info    0x0000000000000000      0x2d1 vector.o
 .debug_info    0x00000000000002d1       0x6f main.o
 .debug_info    0x0000000000000340      0xfbb byte_mask_aes.o
 .debug_info    0x00000000000012fb      0x288 random.o
 .debug_info    0x0000000000001583      0xcf5 simple_tmpl.o

.debug_abbrev   0x0000000000000000      0x8d4
 .debug_abbrev  0x0000000000000000      0x12a vector.o
 .debug_abbrev  0x000000000000012a       0x57 main.o
 .debug_abbrev  0x0000000000000181      0x367 byte_mask_aes.o
 .debug_abbrev  0x00000000000004e8      0x127 random.o
 .debug_abbrev  0x000000000000060f      0x2c5 simple_tmpl.o

.debug_loc      0x0000000000000000      0x7e6
 .debug_loc     0x0000000000000000       0xee vector.o
 .debug_loc     0x00000000000000ee      0x576 byte_mask_aes.o
 .debug_loc     0x0000000000000664       0x8b random.o
 .debug_loc     0x00000000000006ef       0xf7 simple_tmpl.o

.debug_aranges  0x0000000000000000      0x168
 .debug_aranges
                0x0000000000000000       0x30 vector.o
 .debug_aranges
                0x0000000000000030       0x20 main.o
 .debug_aranges
                0x0000000000000050       0x90 byte_mask_aes.o
 .debug_aranges
                0x00000000000000e0       0x50 random.o
 .debug_aranges
                0x0000000000000130       0x38 simple_tmpl.o

.debug_ranges   0x0000000000000000      0x130
 .debug_ranges  0x0000000000000000       0x20 vector.o
 .debug_ranges  0x0000000000000020       0x10 main.o
 .debug_ranges  0x0000000000000030       0x98 byte_mask_aes.o
 .debug_ranges  0x00000000000000c8       0x40 random.o
 .debug_ranges  0x0000000000000108       0x28 simple_tmpl.o

.debug_line     0x0000000000000000      0xbdc
 .debug_line    0x0000000000000000       0xf9 vector.o
 .debug_line    0x00000000000000f9       0x38 main.o
 .debug_line    0x0000000000000131      0x521 byte_mask_aes.o
 .debug_line    0x0000000000000652      0x206 random.o
 .debug_line    0x0000000000000858      0x384 simple_tmpl.o

.debug_str      0x0000000000000000      0x9ae
 .debug_str     0x0000000000000000      0x285 vector.o
                                        0x2be (size before relaxing)
 .debug_str     0x0000000000000285      0x10e main.o
                                        0x113 (size before relaxing)
 .debug_str     0x0000000000000393      0x519 byte_mask_aes.o
                                        0x6f6 (size before relaxing)
 .debug_str     0x00000000000008ac       0x69 random.o
                                        0x224 (size before relaxing)
 .debug_str     0x0000000000000915       0x99 simple_tmpl.o
                                        0x695 (size before relaxing)

.comment        0x0000000000000000       0xe1
 .comment       0x0000000000000000       0x70 vector.o
                                         0x71 (size before relaxing)
 .comment       0x0000000000000070       0x71 main.o
                                         0x72 (size before relaxing)
 .comment       0x00000000000000e1       0x72 byte_mask_aes.o
 .comment       0x00000000000000e1       0x72 random.o
 .comment       0x00000000000000e1       0x72 simple_tmpl.o

.ARM.attributes
                0x0000000000000000       0x2f
 .ARM.attributes
                0x0000000000000000       0x31 vector.o
 .ARM.attributes
                0x0000000000000031       0x21 elmoasmfunctions.o
 .ARM.attributes
                0x0000000000000052       0x31 main.o
 .ARM.attributes
                0x0000000000000083       0x31 byte_mask_aes.o
 .ARM.attributes
                0x00000000000000b4       0x31 random.o
 .ARM.attributes
                0x00000000000000e5       0x31 simple_tmpl.o

.debug_frame    0x0000000000000000      0x338
 .debug_frame   0x0000000000000000       0x40 vector.o
 .debug_frame   0x0000000000000040       0x28 main.o
 .debug_frame   0x0000000000000068      0x1ac byte_mask_aes.o
 .debug_frame   0x0000000000000214       0xa8 random.o
 .debug_frame   0x00000000000002bc       0x7c simple_tmpl.o
